// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
// ENUMS
enum BillingType {
  Fixed
  Percentage
}

// AUTH MODELS
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String   @unique
  password      String?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  invoices      Invoice[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt  @default(now())
}

// INVOICE APP MODELS
model Invoice {
  id                      String                  @id @default(cuid())
  userId                  String
  user                    User                    @relation(fields: [userId], references: [id], onDelete: Cascade)

  invoiceNumber            Int
  invoicePrefix           String

  companyDetailsId        String?                 @unique
  companyDetails          CompanyDetails?         @relation(fields: [companyDetailsId], references: [id], onDelete: SetNull)

  clientDetailsId         String?                 @unique
  clientDetails           ClientDetails?          @relation(fields: [clientDetailsId], references: [id], onDelete: SetNull)

  invoiceDetailsId        String?                 @unique
  invoiceDetails          InvoiceDetails?         @relation(fields: [invoiceDetailsId], references: [id], onDelete: SetNull)
  
  additionalInformationId String?                 @unique
  additionalInformation   AdditionalInformation?  @relation(fields: [additionalInformationId], references: [id], onDelete: SetNull)

  invoiceItems            InvoiceItem[]

  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  isDeleted               Boolean                 @default(false)

  @@index([userId])
}

model CompanyDetails {
  id               String   @id @default(cuid())
  invoice          Invoice?
  companyName      String
  companyEmail     String
  companyAddress   String
  companyLogo      String?
  companySignature String?
  isDeleted        Boolean  @default(false)
}

model ClientDetails {
  id            String   @id @default(cuid())
  invoice       Invoice?
  clientName    String
  clientEmail   String
  clientAddress String
  clientPhone   String
  isDeleted     Boolean  @default(false)

  @@index([clientEmail])
}

model InvoiceDetails {
  id             String           @id @default(cuid())
  invoice        Invoice?
  currency       String
  themeColor     String
  invoiceDate    DateTime         @db.Date
  dueDate        DateTime         @db.Date
  paymentTerms   String
  billingDetails BillingDetails[]
  isDeleted      Boolean          @default(false)

  @@index([invoiceDate])
}

model BillingDetails {
  id               String         @id @default(cuid())
  invoiceDetailsId String
  invoiceDetails   InvoiceDetails @relation(fields: [invoiceDetailsId], references: [id])
  label            String
  value            Float
  type             BillingType
}

model InvoiceItem {
  id          String   @id @default(cuid())
  invoiceId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  itemName    String
  description String?
  quantity    Int
  rate        Float
  isDeleted   Boolean  @default(false)
}

model AdditionalInformation {
  id        String   @id @default(cuid())
  invoice   Invoice?
  notes     String?  @db.Text
  isDeleted Boolean  @default(false)
}